on:
    workflow_call:
        inputs:
            working-directory:
                description: 'The working directory to run the commands in'
                required: true
                type: string
            artifact-name:
                description: 'The name of the artifact to upload'
                required: true
                type: string
            environment-name:
                description: 'The name of the environment to deploy to'
                required: true
                type: string
            s3-bucket-name:
                description: 'The name of the S3 bucket to upload the artifact to'
                required: true
                type: string
            region:
                description: 'The AWS region to deploy to'
                required: true
                type: string
                default: 'us-east-1'

jobs:
    buildAndDeployLambda:
        name: Lambda Build and Deploy to S3
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ${{ inputs.working-directory }}
        environment:
            name: ${{ inputs.environment-name }}
        permissions:
            id-token: write
            contents: read
        steps:
            - uses: FranzDiebold/github-env-vars-action@v2.1.0
                
            - name: Checkout
              uses: actions/checkout@v2

            - name: Setup Node.js
              uses: actions/setup-node@v2
              with:
                node-version: '16'

            - name: Cache Node.js modules
              uses: actions/cache@v2
              with:
                path: ~/.npm  # npm cache files are stored in `~/.npm` on Linux/macOS
                key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                restore-keys: |
                  ${{ runner.os }}-node-

            - name: Install dependencies
              run: npm install

            - name: Build Artifact
              run: |
                npm run build
                zip -r ./lambda-artifact.zip ./prod ./package.json

            - name: Generate hash
              id: generate-hash
              run: |
                ls -lha ./${{ inputs.working-directory }}
                echo "::set-output name=hash::$(find ./${{ inputs.working-directory }}/src ./${{ inputs.working-directory }}/package.json -type f -exec sha256sum {} \; | sha256sum)"      

            - name: Cache lambda artifact
              id: cache
              uses: actions/cache@v2
              with:
                path: ${{ inputs.working-directory}}/lambda-artifact.zip
                key: ${{ inputs.artifact-name }}-lambda-${{ steps.generate-hash.outputs.hash }}
                restore-keys: |
                  ${{ inputs.artifact-name }}-lambda-

            - name: Test
              if: steps.cache.outputs.cache-hit != 'true'
              run: npm test

            - name: Configure AWS Credentials
              if: steps.cache.outputs.cache-hit != 'true'
              uses: aws-actions/configure-aws-credentials@v3
              with:
                role-to-assume: arn:aws:iam::816923827429:role/ClashBotGitHubUser
                aws-region: ${{ inputs.region }}

            - name: Archive and Publish
              if: steps.cache.outputs.cache-hit != 'true'
              run: |
                aws s3 cp ./lambda-artifact.zip s3://${{ inputs.s3-bucket-name }}/artifacts/${{ inputs.artifact-name}}/$(echo ${{ inputs.environment-name }} | awk '{print tolower($0)}')/artifact-${{ github.run_number }}.zip