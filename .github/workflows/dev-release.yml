name: Build and Deploy into Development

on:
  push:
      branches:
          - main
      paths-ignore:
          - '**/README.md'
          - '**/.gitignore'

jobs:
    terraformPreReqs:
      name: Prerequisite Infrastructure
      environment: 
        name: Development
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: ./terraform/prereqs
      permissions:
        id-token: write
        contents: read
        pull-requests: write
  
      steps:
        - uses: FranzDiebold/github-env-vars-action@v2.1.0
  
        - name: Checkout
          uses: actions/checkout@v3
  
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v3
          with:
            role-to-assume: arn:aws:iam::816923827429:role/ClashBotGitHubUser
            aws-region: us-east-1
  
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v1
          with:
            cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
  
        - name: Terraform Init
          id: init
          run: terraform init
    
        - name: Terraform Apply
          id: apply
          env:
            TF_VAR_region: us-east-1
            TF_VAR_environment: ${{ vars.ENVIRONMENT }}
            TF_VAR_s3_bucket_name: ${{ vars.S3_BUCKET_NAME }}
          run: terraform apply -no-color -input=false --auto-approve

    eventPublisher:
        name: Build and Deploy Event Publisher Lambda
        environment:
          name: Development
        runs-on: ubuntu-latest
        needs: terraformPreReqs
        permissions:
          id-token: write
          contents: read
        defaults:
            run:
                working-directory: ./functions/clash-bot/event-publisher
        
        steps:
            - uses: FranzDiebold/github-env-vars-action@v2.1.0

            - name: Setup Node.js
              uses: actions/setup-node@v2
              with:
                node-version: '16'
        
            - name: Checkout
              uses: actions/checkout@v2
        
            - name: Install dependencies and link
              run: |
                npm install

            - name: Build
              run: npm run build
  
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v3
              with:
                role-to-assume: arn:aws:iam::816923827429:role/ClashBotGitHubUser
                aws-region: us-east-1
    
            - name: Archive and Publish
              run: |
                tar -czf ./event-publisher-${{ github.run_number }}.tar.gz ./prod ./node_modules ./package.json
                aws s3 cp ./event-publisher-${{ github.run_number }}.tar.gz s3://${{ vars.S3_BUCKET_NAME }}/artifacts/${{ github.run_number }}/event-publisher-${{ github.run_number }}.tar.gz
      
            - name: Upload Artifacts
              uses: actions/upload-artifact@v2
              with:
                name: event-handler-${{ github.run_number }}
                path: ./functions/clash-bot/event-publisher/event-publisher-${{ github.run_number }}.tar.gz
                if-no-files-found: error

    eventHandler:
        name: Build and Deploy Event Handler Lambda
        environment: 
          name: Development
        runs-on: ubuntu-latest
        needs: terraformPreReqs
        permissions:
          id-token: write
          contents: read
        defaults:
            run:
                working-directory: ./functions/clash-bot/event-handler
        
        steps:
        - uses: FranzDiebold/github-env-vars-action@v2.1.0

        - name: Setup Node.js
          uses: actions/setup-node@v2
          with:
            node-version: '16'
        
        - name: Checkout
          uses: actions/checkout@v2
        
        - name: Install dependencies and link
          run: |
            npm install

        - name: Build
          run: npm run build
  
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v3
          with:
            role-to-assume: arn:aws:iam::816923827429:role/ClashBotGitHubUser
            aws-region: us-east-1

        - name: Archive and Publish
          run: |
            tar -czf ./event-handler-${{ github.run_number }}.tar.gz ./prod ./node_modules ./package.json
            aws s3 cp ./event-handler-${{ github.run_number }}.tar.gz s3://${{ vars.S3_BUCKET_NAME }}/artifacts/${{ github.run_number }}/event-handler-${{ github.run_number }}.tar.gz
  
        - name: Upload Artifacts
          uses: actions/upload-artifact@v2
          with:
            name: event-handler-${{ github.run_number }}
            path: ./functions/clash-bot/event-handler/event-handler-${{ github.run_number }}.tar.gz
            if-no-files-found: error

    terraformWorkflow:
      name: Workflow Infrastructure
      runs-on: ubuntu-latest
      environment: 
        name: Development
      defaults:
        run:
          working-directory: ./terraform/workflow
      needs: 
        - terraformPreReqs
        - eventPublisher
        - eventHandler
      permissions:
        id-token: write
        contents: read
  
      steps:
        - uses: FranzDiebold/github-env-vars-action@v2.1.0
  
        - name: Checkout
          uses: actions/checkout@v3
  
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v3
          with:
            role-to-assume: arn:aws:iam::816923827429:role/ClashBotGitHubUser
            aws-region: us-east-1
  
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v1
          with:
            cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
  
        - name: Terraform Init
          id: init
          run: terraform init
  
        - name: Terraform Apply
          id: apply
          env:
            TF_VAR_region: us-east-1
            TF_VAR_environment: ${{ vars.ENVIRONMENT }}
            TF_VAR_s3_bucket_name: ${{ vars.S3_BUCKET_NAME }}
            TF_VAR_event_publisher_artifact_path: artifacts/${{ github.run_number }}/event-publisher-${{ github.run_number }}.tar.gz
            TF_VAR_event_handler_artifact_path: artifacts/${{ github.run_number }}/event-handler-${{ github.run_number }}.tar.gz
            TF_VAR_sqs_batch_size: "1"
          run: terraform apply -no-color -input=false --auto-approve