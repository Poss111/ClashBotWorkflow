name: Build - Clash Bot Workflow

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/README.md'
      - '**/.gitignore'

jobs:
  terraformPreReqs:
    name: Prerequisites Apply
    runs-on: ubuntu-latest
    environment: 
      name: Development
    defaults:
      run:
        working-directory: ./terraform/prereqs
    permissions:
      id-token: write
      contents: read
      pull-requests: write

    steps:
      - uses: FranzDiebold/github-env-vars-action@v2.1.0

      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::816923827429:role/ClashBotGitHubUser
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Apply
        id: apply
        if: github.event_name == 'pull_request'
        env:
          TF_VAR_region: us-east-1
          TF_VAR_environment: ${{ vars.ENVIRONMENT }}
          TF_VAR_s3_bucket_name: ${{ vars.S3_BUCKET_NAME }}
        run: terraform apply -no-color -input=false

      - name: Update Pull Request
        uses: actions/github-script@v6.1.0
        if: github.event_name == 'pull_request'
        env:
          APPLY: "terraform\n${{ steps.apply.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `Clash Bot Workflow Prerequisites - Apply
            #### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Prerequisite Apply üìñ\`${{ steps.apply.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

            <details><summary>Show Apply</summary>

            #### Prerequisites
            \`\`\`\n
            ${process.env.APPLY}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

  eventPublisher:
    uses: ./.github/workflows/build_and_deploy_lambda.yml
    with:
      working-directory: functions/clash-bot/event-publisher
      artifact-name: event-publisher
      s3-bucket-name: ${{ vars.S3_BUCKET_NAME }}
      environment-name: Development
      region: us-east-1
    needs:
      - terraformPreReqs

  eventHandler:
    uses: ./.github/workflows/build_and_deploy_lambda.yml
    with:
      working-directory: functions/clash-bot/event-handler
      artifact-name: event-handler
      s3-bucket-name: ${{ vars.S3_BUCKET_NAME }}
      environment-name: Development
      region: us-east-1
    needs:
      - terraformPreReqs

  eventNotifier:
    uses: ./.github/workflows/build_and_deploy_lambda.yml
    with:
      working-directory: functions/clash-bot/event-notifier
      artifact-name: event-notifier
      s3-bucket-name: ${{ vars.S3_BUCKET_NAME }}
      environment-name: Development
      region: us-east-1
    needs:
      - terraformPreReqs

  createTeam:
    uses: ./.github/workflows/build_and_deploy_lambda.yml
    with:
      working-directory: functions/clash-bot/team/create
      artifact-name: create-team
      s3-bucket-name: ${{ vars.S3_BUCKET_NAME }}
      environment-name: Development
      region: us-east-1
    needs:
      - terraformPreReqs

  retrieveTeams:
    uses: ./.github/workflows/build_and_deploy_lambda.yml
    with:
      working-directory: functions/clash-bot/team/retrieve
      artifact-name: retrieve-teams
      s3-bucket-name: ${{ vars.S3_BUCKET_NAME }}
      environment-name: Development
      region: us-east-1
    needs:
      - terraformPreReqs

  isTournamentEligible:
    uses: ./.github/workflows/build_and_deploy_lambda.yml
    with:
      working-directory: functions/clash-bot/team/is-tournament-eligible
      artifact-name: is-tournament-eligible
      s3-bucket-name: ${{ vars.S3_BUCKET_NAME }}
      environment-name: Development
      region: us-east-1
    needs:
      - terraformPreReqs

  websocketPublisher:
    uses: ./.github/workflows/build_and_deploy_lambda.yml
    with:
      working-directory: functions/clash-bot/websocket-publisher
      artifact-name: websocket-publisher
      s3-bucket-name: ${{ vars.S3_BUCKET_NAME }}
      environment-name: Development
      region: us-east-1
    needs:
      - terraformPreReqs

  terraformWorkflow:
    name: Workflow Apply
    runs-on: ubuntu-latest
    environment: 
      name: Development
    defaults:
      run:
        working-directory: ./terraform/workflow
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    needs:
      - eventHandler
      - eventPublisher
      - eventNotifier
      - createTeam
      - retrieveTeams
      - isTournamentEligible
      - websocketPublisher

    steps:
      - uses: FranzDiebold/github-env-vars-action@v2.1.0

      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::816923827429:role/ClashBotGitHubUser
          aws-region: us-east-1

      - name: Find latest Event Handler artifact
        id: eventHandlerArtifact
        run: ../../scripts/find_latest_artifact.sh ${{ vars.S3_BUCKET_NAME }} event-handler development

      - name: Find latest Event Publisher artifact
        id: eventPublisherArtifact
        run: ../../scripts/find_latest_artifact.sh ${{ vars.S3_BUCKET_NAME }} event-publisher development

      - name: Find latest Create Team artifact
        id: createTeamArtifact
        run: ../../scripts/find_latest_artifact.sh ${{ vars.S3_BUCKET_NAME }} create-team development

      - name: Find latest Retrieve Teams artifact
        id: retrieveTeamsArtifact
        run: ../../scripts/find_latest_artifact.sh ${{ vars.S3_BUCKET_NAME }} retrieve-teams development

      - name: Find latest Is Tournament Eligible artifact
        id: isTournamentEligibleArtifact
        run: ../../scripts/find_latest_artifact.sh ${{ vars.S3_BUCKET_NAME }} is-tournament-eligible development

      - name: Find latest Event Notifier artifact
        id: eventNotifierArtifact
        run: ../../scripts/find_latest_artifact.sh ${{ vars.S3_BUCKET_NAME }} event-notifier development

      - name: Find latest Websocket Publisher artifact
        id: webSocketPublisherArtifact
        run: ../../scripts/find_latest_artifact.sh ${{ vars.S3_BUCKET_NAME }} websocket-publisher development

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init -backend-config=backend-configs/${{ vars.ENVIRONMENT }}.remote.tfbackend

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Apply
        id: apply
        env:
          TF_VAR_region: us-east-1
          TF_VAR_environment: ${{ vars.ENVIRONMENT }}
          TF_VAR_s3_bucket_name: ${{ vars.S3_BUCKET_NAME }}
          TF_VAR_event_publisher_artifact_path: ${{ steps.eventPublisherArtifact.outputs.artifact-path }}
          TF_VAR_event_handler_artifact_path: ${{ steps.eventHandlerArtifact.outputs.artifact-path }}
          TF_VAR_event_notifier_artifact_path: ${{ steps.eventNotifierArtifact.outputs.artifact-path }}
          TF_VAR_create_team_artifact_path: ${{ steps.createTeamArtifact.outputs.artifact-path }}
          TF_VAR_retrieve_teams_artifact_path: ${{ steps.retrieveTeamsArtifact.outputs.artifact-path }}
          TF_VAR_tournament_eligibility_lambda_artifact_path: ${{ steps.isTournamentEligibleArtifact.outputs.artifact-path }}
          TF_VAR_websocket_publisher_artifact_path: ${{ steps.webSocketPublisherArtifact.outputs.artifact-path }}
          TF_VAR_sqs_batch_size: "1"
        run: terraform apply -no-color -input=false --auto-approve

      - name: Update Pull Request
        uses: actions/github-script@v6.1.0
        if: github.event_name == 'pull_request'
        env:
          APPLY: "terraform\n${{ steps.apply.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `# Clash Bot Workflow PR Details

            ## Lambda Function Versions used

            | Lambda Function | Type | Artifact Version |
            | --------------- | ---- | ---------------- |
            | Event Publisher | Foundation | ${{ steps.eventPublisherArtifact.outputs.version }} |
            | Event Handler | Foundation | ${{ steps.eventHandlerArtifact.outputs.version }} |
            | Event Notifier | Foundation | ${{ steps.eventNotifierArtifact.outputs.version }} |
            | Websocket Publisher | Foundation | ${{ steps.webSocketPublisherArtifact.outputs.version }} |
            | Create Team | Team | ${{ steps.createTeamArtifact.outputs.version }} |
            | Retrieve Teams | Team | ${{ steps.retrieveTeamsArtifact.outputs.version }} |
            | Is Tournament Eligible | Team | ${{ steps.isTournamentEligibleArtifact.outputs.version }} |

            #### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Workflow Apply üìñ\`${{ steps.apply.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

            <details><summary>Show Run</summary>

            #### Workflow Apply
            \`\`\`\n
            ${process.env.APPLY}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
 
      # Commenting for now until I can cut down on graph size
      # - name: Install Graphviz
      #   run: sudo apt-get install -y graphviz

      # - name: Generate Graph
      #   run: |
      #     terraform graph > graph.dot
      #     dot -Tpng graph.dot -o graph.png

      # - name: Commit and push
      #   run: |
      #     git config --local user.email "action@github.com"
      #     git config --local user.name "GitHub Action"
      #     git add graph.png
      #     git commit -m "Update Terraform graph [skip ci]" -a
      #     git push
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
