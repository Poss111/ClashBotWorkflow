name: Build - Clash Bot Workflow

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/README.md'
      - '**/.gitignore'

jobs:
  eventPublisher:
    name: Event Publisher Lambda
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./functions/clash-bot/event-publisher
    
    steps:
      - uses: FranzDiebold/github-env-vars-action@v2.1.0

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install depedencies
        run: npm install

      - name: Test
        run: npm test

      - name: Build
        run: npm run build

      - name: Archive
        run: tar -czvf ./event-publisher-${{ github.run_number }}.tar.gz ./prod ./node_modules ./package.json

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: event-publisher-${{ github.run_number }}
          path: ./event-publisher-${{ github.run_number }}.tar.gz

  eventHandler:
    name: Event Handler Lambda
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./functions/clash-bot/event-handler
    
    steps:
      - uses: FranzDiebold/github-env-vars-action@v2.1.0

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Install dependencies
        run: npm install

      - name: Test
        run: npm test

      - name: Build
        run: npm run build

      - name: Archive
        run: tar -czvf ./event-handler-${{ github.run_number }}.tar.gz ./prod ./node_modules ./package.json

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: event-handler-${{ github.run_number }}
          path: ./event-handler-${{ github.run_number }}.tar.gz

  terraformPreReqs:
    name: 'Terraform Plan Prereqs'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform/prereqs
    permissions:
      id-token: write
      contents: read
      pull-requests: write

    steps:
      - uses: FranzDiebold/github-env-vars-action@v2.1.0

      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::816923827429:role/ClashBotGitHubUser
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        env:
          TF_VAR_region: us-east-1
          TF_VAR_environment: development
          TF_VAR_s3_bucket_name: ${{ env.S3_BUCKET_NAME }}
        run: terraform plan -no-color -input=false

      - name: Update Pull Request
        uses: actions/github-script@v6.1.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `Clash Bot Workflow Prerequisites - plan
            #### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Prerequisite Plan üìñ\`${{ steps.plan.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

            <details><summary>Show Plan</summary>

            #### Prerequisites
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

  terraformWorkflow:
    name: 'Terraform Plan Workflow'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform/workflow
    needs: 
      - terraformPreReqs
      - eventPublisher
      - eventHandler
    permissions:
      id-token: write
      contents: read
      pull-requests: write

    steps:
      - uses: FranzDiebold/github-env-vars-action@v2.1.0

      - name: Checkout
        uses: actions/checkout@v3

      - name: Extract Event Publisher Artifact
        uses: actions/download-artifact@v2
        with:
          name: event-publisher-${{ github.run_number }}
          path: ./terraform/prereqs

      - name: Extract Event Handler Artifact
        uses: actions/download-artifact@v2
        with:
          name: event-handler-${{ github.run_number }}
          path: ./terraform/prereqs

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::816923827429:role/ClashBotGitHubUser
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        env:
          TF_VAR_region: us-east-1
          TF_VAR_environment: development
          TF_VAR_s3_bucket_name: ${{ env.S3_BUCKET_NAME }}
          TF_VAR_event_publisher_artifact_name: event-publisher-${{ github.run_number }}.tar.gz
          TF_VAR_event_handler_artifact_name: event-handler-${{ github.run_number }}.tar.gz
          TF_VAR_sqs_batch_size: "1"
        run: terraform plan -no-color -input=false

      - name: Update Pull Request
        uses: actions/github-script@v6.1.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `Clash Bot Workflow - plan
            #### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Workflow Plan üìñ\`${{ steps.plan.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

            <details><summary>Show Plan</summary>

            #### Prerequisites
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
    
      - name: Install Graphviz
        run: sudo apt-get install -y graphviz

      - name: Generate Graph
        run: |
          terraform graph > graph.dot
          dot -Tpng graph.dot -o graph.png

      - name: Commit and push
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add graph.png
          git commit -m "Update Terraform graph [skip ci]" -a
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
